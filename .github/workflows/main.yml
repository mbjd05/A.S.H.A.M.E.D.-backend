name: Build, Test, Dockerize! 🚀

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ github.repository }}
  DOTNET_VERSION: '8.0.x'
  SOLUTION_NAME: 'AshamedApp'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Setup .NET SDK
      - name: Setup .NET 📦
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Restore project dependencies
      - name: Restore Dependencies 🔄
        run: dotnet restore ${{ env.SOLUTION_NAME }}.sln

      # Build the solution
      - name: Build Solution 🔨
        run: dotnet build ${{ env.SOLUTION_NAME }}.sln -c Release --no-restore

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Setup .NET SDK
      - name: Setup .NET 📦
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Run tests
      - name: Run Tests ✅
        run: dotnet test ${{ env.SOLUTION_NAME }}.Tests/${{ env.SOLUTION_NAME }}.Tests.csproj -c Release --no-build --verbosity normal

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Build Docker image
      - name: Build Docker Image 🐳
        run: docker build -t ${{ env.IMAGE_NAME }} .

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry 🔑
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Push Docker image to the registry
      - name: Push Docker Image 🚢
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest
